import sys
sys.version #this checks which version of software you are using

%pwd  #look at the current work dir
%cd   #change to the dir you want 
! ls #list all files in current dir

import os
! pip install tensorflow as tf
import numpy as np
! pip install pandas as pd
import matplotlib.pyplot as plt
import random
! pip install nibabel as nib # Dependency: 'nibabel' to load MRI (NIFTI) images
import fnmatch
! pip install nilearn 
import nilearn
from nilearn import image
from nilearn.image import resample_to_img

! mkdir prep


os.environ['FSLOUTPUTTYPE'] = 'NIFTI_GZ'

# here switch to other folder

for subj in os.listdir(os.getcwd()):
    subj_path = os.path.join(os.getcwd(), subj)
    print ("Working on " + subj_path)
    series = fnmatch.filter(os.listdir(subj_path), '*.nii.gz')
    for ser in ['T2']:
        nii_file = os.path.join (subj_path, ser)
# First, perform N4 bias correction. Not required, but may improve results. Also must track new names
        new_file = os.path.join (subj_path, 'N4-' + ser)
        cmd = "./N4BiasFieldCorrection -i %s.nii.gz -o %s.nii.gz" % (nii_file, new_file)
        os.system(cmd)
#        print (cmd)

import SimpleITK as sitk
def N4(): #this worked doing one at a time
    print("N4 bias correction runs.")
    inputImage = sitk.ReadImage("Codel1.nii")
    # maskImage = sitk.ReadImage("06-t1c_mask.nii.gz")
    maskImage = sitk.OtsuThreshold(inputImage,0,1,200)
    sitk.WriteImage(maskImage, "Codel1.nii")

    inputImage = sitk.Cast(inputImage,sitk.sitkFloat32)

    corrector = sitk.N4BiasFieldCorrectionImageFilter();

    output = corrector.Execute(inputImage,maskImage)
    sitk.WriteImage(output,"Codel1.nii")
    print("Finished N4 Bias Field Correction.....")

if __name__=='__main__':
   N4()


# rescaling 3D image
